version: 2
jobs:
  build:
    environment:
      CC_TEST_REPORTER_ID: 3c2ff1b7a81154fdff569cdfc65990f9b3c4a9feb49b69f4f9cfae2495d8bcf5
    working_directory: ~/app
    docker:
      - image: circleci/python:3-node
      #- image: circleci/python:3.7

    steps:
      - checkout
      - run: sudo chown -R circleci:circleci /usr/local/bin
      - run: sudo chown -R circleci:circleci /usr/local/lib/python3.8/site-packages
      #- restore_cache:
      #    key: deps9-{{ .Branch }}-{{ checksum "requirements.txt" }}

      # Create virtual env and install dependencies
      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
            yarn install
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter

      - save_cache: # cache Python dependencies using checksum of Pipfile as the cache-key
          key: deps9-{{ .Branch }}-{{ checksum "requirements.txt" }}
          paths:
            - ".venv"
            - "/usr/local/bin"
            - "/usr/local/lib/python3.8/site-packages"

      #- run:
      #    name: Code Checker
      #    command: |
      #      flake8 --exclude=venv* --statistics
            
      # Run linter and tests
      - run:
          name: Run Tests
          command: |
            . venv/bin/activate
            python3 -m pytest --cov-report xml --cov=.
            python3 -m coverage report

      - run:
          name: Uploading Coverage Tests
          command: |
            ./cc-test-reporter format-coverage -t coverage.py -o codeclimate.xml coverage.xml
            ./cc-test-reporter upload-coverage -i codeclimate.xml